{"ast":null,"code":"const API_BASE_URL = \"http://localhost:5000/api/products\"; // ✅ Correct backend URL\n\nexport const fetchProducts = async () => {\n  const response = await fetch(API_BASE_URL);\n  if (!response.ok) throw new Error(\"Failed to fetch products\");\n  return response.json();\n};\nexport const createProduct = async product => {\n  const response = await fetch(API_BASE_URL, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(product)\n  });\n  if (!response.ok) throw new Error(\"Failed to create product\");\n  return response.json();\n};\nexport const updateProduct = async (id, updatedProduct) => {\n  const response = await fetch(`${API_BASE_URL}/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(updatedProduct)\n  });\n  if (!response.ok) throw new Error(\"Failed to update product\");\n  return response.json();\n};\nexport const deleteProduct = async id => {\n  const response = await fetch(`${API_BASE_URL}/${id}`, {\n    method: \"DELETE\"\n  });\n  if (!response.ok) throw new Error(\"Failed to delete product\");\n  return response.json();\n};","map":{"version":3,"names":["API_BASE_URL","fetchProducts","response","fetch","ok","Error","json","createProduct","product","method","headers","body","JSON","stringify","updateProduct","id","updatedProduct","deleteProduct"],"sources":["C:/Users/vediy/Documents/program languages/node/product-catalog-mongodb/frontend/src/api.js"],"sourcesContent":["const API_BASE_URL = \"http://localhost:5000/api/products\"; // ✅ Correct backend URL\r\n\r\nexport const fetchProducts = async () => {\r\n  const response = await fetch(API_BASE_URL);\r\n  if (!response.ok) throw new Error(\"Failed to fetch products\");\r\n  return response.json();\r\n};\r\n\r\nexport const createProduct = async (product) => {\r\n  const response = await fetch(API_BASE_URL, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(product),\r\n  });\r\n  if (!response.ok) throw new Error(\"Failed to create product\");\r\n  return response.json();\r\n};\r\n\r\nexport const updateProduct = async (id, updatedProduct) => {\r\n  const response = await fetch(`${API_BASE_URL}/${id}`, {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(updatedProduct),\r\n  });\r\n  if (!response.ok) throw new Error(\"Failed to update product\");\r\n  return response.json();\r\n};\r\n\r\nexport const deleteProduct = async (id) => {\r\n  const response = await fetch(`${API_BASE_URL}/${id}`, {\r\n    method: \"DELETE\",\r\n  });\r\n  if (!response.ok) throw new Error(\"Failed to delete product\");\r\n  return response.json();\r\n};\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,oCAAoC,CAAC,CAAC;;AAE3D,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,YAAY,CAAC;EAC1C,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EAC7D,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG,MAAOC,OAAO,IAAK;EAC9C,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAACH,YAAY,EAAE;IACzCS,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;EAC9B,CAAC,CAAC;EACF,IAAI,CAACN,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EAC7D,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMQ,aAAa,GAAG,MAAAA,CAAOC,EAAE,EAAEC,cAAc,KAAK;EACzD,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,IAAIe,EAAE,EAAE,EAAE;IACpDN,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACG,cAAc;EACrC,CAAC,CAAC;EACF,IAAI,CAACd,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EAC7D,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMW,aAAa,GAAG,MAAOF,EAAE,IAAK;EACzC,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,IAAIe,EAAE,EAAE,EAAE;IACpDN,MAAM,EAAE;EACV,CAAC,CAAC;EACF,IAAI,CAACP,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EAC7D,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}